@using outliers_lib
@using app.Data

<div class="collapse show">
    <div class="input-group" style="margin-top: 8px;">
        <div class="input-group-prepend"><span class="input-group-text">Addon</span></div><select class="custom-select" @onchange="@OnSelect">
            <option label="Выберите алгоритм..." disabled selected>choose</option>
            @foreach (var module in Config)
            {
                <option label="@module.Value.CoolName">@module.Key</option>
            }
        </select>
    </div>
</div>

@foreach (var item in Selected.Options)
{
    @if (item.Value.Type == "double")
    {
        <DoubleParameter Mod="@Mod" Item="@item"></DoubleParameter>
    }

    @if (item.Value.Type == "string")
    {

    }

    @if (item.Value.Type == "bool")
    {
        <BoolParameter Mod="@Mod" Item="@item"></BoolParameter>
    }
}

@code{
    [Parameter]
    public Module Mod { get; set; }
    
    [Parameter]
    public Dictionary<string, ModuleSettings> Config { get; set; }

    public ModuleSettings Selected { get; set; } = new ModuleSettings();

    public void OnSelect(ChangeEventArgs args)
    {
        if (args.Value.ToString() == "choose")
        {
            Selected = new ModuleSettings();
            return;
        }

        Selected = Config[args.Value.ToString()];
        Mod.Params.Clear();
        Mod.Name = args.Value.ToString();
        foreach (var o in Selected.Options)
        {
            if(o.Value.Type == "double")
            {
                Mod.Params.Add(o.Key, o.Value.Default);
                continue;
            }

            if(o.Value.Type == "bool")
            {
                Mod.Params.Add(o.Key, o.Value.Default);
                continue;
            }

            Mod.Params.Add(o.Key, null);
        }
    }

}