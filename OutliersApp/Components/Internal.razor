@using OutliersLib
@using OutliersApp.Models.Parameters
@using OutliersApp.Models
@using OutliersApp.Components.Parameters
@namespace OutliersApp.Components

<div class="input-group my-2">

    @*Надпись слева*@
    <div class="input-group-prepend">
        <span class="input-group-text">Имя модуля</span>
    </div>

    @*Поле выбора справа*@
    <select class="custom-select @(Model.NotSelected ? "is-invalid" : "")" @onchange="@OnSelect">
        <option label="Выберите алгоритм..." disabled selected="@(Model.Selected.Name == string.Empty)"></option>
        @foreach (var module in Model.InternalModulesList)
        {
            <option label="@module.CoolName" selected="@(Model.Selected.Name == module.Name)">@module.Name</option>
        }
    </select>

</div>


@foreach (var setting in Model.Selected.Settings)
{
    @if (setting is DoubleParameterModel)
    {
        <DoubleParameter SettingsForm="@((DoubleParameterModel)setting)"></DoubleParameter>
    }

    @if (setting is SelectParameterModel)
    {
        <SelectParameter SettingsForm="@((SelectParameterModel)setting)"></SelectParameter>
    }

    @if (setting is BoolParameterModel)
    {
        <BoolParameter SettingsForm="@((BoolParameterModel)setting)"></BoolParameter>
    }
    
    @if (setting is StringParameterModel)
    {
        <StringParameter SettingsForm="@((StringParameterModel) setting)"></StringParameter>
    }
}

@code{

    [Parameter]
    public InternalFormModel Model { get; set; }

    public void OnSelect(ChangeEventArgs args)
    {
        string selectedName = args.Value.ToString();
        foreach (var internalModule in Model.InternalModulesList)
        {
            if (internalModule.Name == selectedName)
                Model.Selected = internalModule;
        }
    }

}