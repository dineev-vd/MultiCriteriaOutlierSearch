@if (ConfigNotLoaded)
{
    <div class="container mb-4 border border-danger rounded p-3">
        Не удалось загрузить Config.
    </div>
}

<form class="needs-validation">
    @*Алгоритмы*@
    <div class="container mb-4 border rounded p-3">
        <h4>Алгоритмы</h4>
        <h6 class="text-muted mb-2">Список алгоритмов для выполнения</h6>
        <div role="tablist" id="accordion-1">
            @{ var id = 0; }
            @foreach (var item in UserInstance.Algorithms)
            {
                string local = id + "-1";
                <ModuleFormPage Id="@local" ModuleFormModel="@item" OnDelete=@(mod => UserInstance.Algorithms.Remove(mod)) HasWeight="@true"></ModuleFormPage>
                id++;
            }
        </div>
        <button class="btn btn-primary btn-block btn-sm" type="button" @onclick="OnClick">Добавить алгоритм</button>
    </div>

    @*Комбинации*@
    <div class="container mb-4 border rounded p-3">
        <h4>Комбинации</h4>
        <h6 class="text-muted mb-2">Список комбинаций для выполнения</h6>
        <div role="tablist" id="accordion-2">
            @{ var idd = 0; }
            @foreach (var item in UserInstance.Combinations)
            {
                string local = idd + "-2";
                <ModuleFormPage @key=item Id="@local" ModuleFormModel="@item" OnDelete=@(mod => UserInstance.Combinations.Remove(mod)) HasWeight="@false"></ModuleFormPage>
                idd++;
            }
        </div>
        <button class="btn btn-primary btn-block btn-sm" type="button" @onclick="OnClickCombs">Добавить комбинацию</button>
    </div>

    <div class="container mb-4 border rounded p-3">
        <ValuesInput UserInstance="@UserInstance"></ValuesInput>
        <button class="btn btn-success btn-block btn-sm" type="button" @onclick="OnSendClick">
            @if (IsLoading)
            {
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            }
            Отправить
        </button>
    </div>
</form>
@if (!IsValid)
{
    <p class="text-danger collapse @(IsValid ? "" : "show")">Проверьте поля!</p>
}




@foreach (var response in responses.AlgResponses)
{
    if (response.Status != 200)
    {
        <div class="container mb-4 border border-danger rounded p-3">
            <p>
                Алгоритм @response.Name отработал с ошибкой:
                <ul>
                    <li>Статус: @response.Status</li>
                    <li>Сообщение: @response.Message</li>
                </ul>
            </p>
        </div>
    }
}


@foreach (var response in responses.CombResponses)
{
    if (response.Status != 200)
    {
        <div class="container mb-4 border border-danger rounded p-3">
            <p>
                Комбинация @response.Name отработала с ошибкой:
                <ul>
                    <li>Статус: @response.Status</li>
                    <li>Сообщение: @response.Message</li>
                </ul>
            </p>
        </div>
    }
}

<Table valueList="@UserInstance.Values" responses="@responses"></Table>

@*TODO Проверка на корректность формы
*@

@using Newtonsoft.Json
@using OutliersLib
@inject IJSRuntime IJSRuntime
@namespace OutliersApp.Components