@using OutliersApp.Models.Parameters
@using OutliersApp.Models.ParameterModels
<div class="input-group" style="margin-bottom: 8px;">
    <div class="input-group-prepend">
        <span class="input-group-text">@SettingsForm.CoolName</span>
    </div>
    <input type="text" placeholder="Введите строку.." class="form-control" @oninput=@(ChangeValue) required/>

    @if (SettingsForm.IsCustom)
    {
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="button" @onclick=@(async e => await OnDelete.InvokeAsync(SettingsForm))>Удалить</button>
        </div>
    }
</div>

@code{
    [Parameter]
    public EventCallback<ParameterModelBase> OnDelete { get; set; }
    
    [Parameter]
    public StringParameterModel SettingsForm { get; set; }

    public void ChangeValue(ChangeEventArgs args)
    {
        string inputValue = args.Value.ToString();

        if (inputValue == string.Empty)
        {
            if (SettingsForm.IsCustom)
            {
                SettingsForm.IsValid = false;
                return;
            }
            SettingsForm.Value = SettingsForm.Default;
        }
        else
        {
            try
            {
                SettingsForm.Value = inputValue;
            }
            catch
            {
                SettingsForm.IsValid = false;
                return;
            }
        }

        SettingsForm.IsValid = true;
    }

}