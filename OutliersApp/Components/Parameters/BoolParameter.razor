@using OutliersLib
@using OutliersApp.Models.Parameters
@namespace OutliersApp.Components

<div class="custom-control custom-checkbox">
    <input type="checkbox" class="custom-control-input" id="check-@Id"  @onchange="OnChange" checked="@SettingsForm.Value">
    <label class="custom-control-label" for="check-@Id">@SettingsForm.CoolName</label>
</div>
@if (SettingsForm.IsCustom)
    {
        
             <button class="btn btn-outline-secondary" type="button" @onclick=@(async e => await OnDelete.InvokeAsync(SettingsForm))>Удалить</button>
    }

@*TODO Сделать зависимость id От ID*@

@code
{
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public EventCallback<ParameterModelBase> OnDelete { get; set; }
    
    [Parameter]
    public BoolParameterModel SettingsForm { get; set; }

    public void OnChange(ChangeEventArgs args)
    {
        string inputValue = args.Value.ToString();
        try
        {
            SettingsForm.Value = bool.Parse(inputValue);
        }
        catch
        {
            SettingsForm.IsValid = false;
            return;
        }

        SettingsForm.IsValid = true;
    }
}