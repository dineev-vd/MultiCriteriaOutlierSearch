@using OutliersLib.ParameterTypes
@namespace OutliersApp.Components.Parameters

<div class="custom-control custom-checkbox">
    <input type="checkbox" class="custom-control-input" id="check-@Id" @onchange="@(e => FormAsBool.SetValue(e.Value.ToString()))" checked="@FormAsBool.Value">
    <label class="custom-control-label" for="check-@Id">@(FormAsBool.FullName == string.Empty ? SettingsForm.Key : FormAsBool.FullName) </label>
</div>
@if (FormAsBool.IsCustom)
{
    <button class="btn btn-outline-secondary" type="button" @onclick=@(async e => await OnDelete.InvokeAsync(SettingsForm))>Удалить</button>
}

@code
{
    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public EventCallback<KeyValuePair<string, ParameterBase>> OnDelete { get; set; }

    [Parameter]
    public KeyValuePair<string, ParameterBase> SettingsForm { get; set; }

    private BoolParameterModel FormAsBool
    {
        get => SettingsForm.Value as BoolParameterModel;
    }
}