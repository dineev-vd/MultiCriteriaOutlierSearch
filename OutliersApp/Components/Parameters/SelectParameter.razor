@using OutliersLib
@using OutliersApp.Models.Parameters
@using OutliersApp.Models.ParameterModels
@namespace OutliersApp.Components

<div class="input-group" style="margin-top: 8px;">
    <div class="input-group-prepend">
        <span class="input-group-text">@SettingsForm.CoolName</span>
    </div>
    <select class="custom-select" @onchange="@OnSelect">
        <option label="Выберите значение..." disabled></option>
        @foreach (var option in SettingsForm.Options)
        {
            <option label="@option" selected="@(option == SettingsForm.Value)">@option</option>
        }
    </select>
    @if (SettingsForm.IsCustom)
        {
            <div class="input-group-append">
                 <button class="btn btn-outline-secondary" type="button" @onclick=@(async e => await OnDelete.InvokeAsync(SettingsForm))>Удалить</button>
            </div>
        }
</div>


@code{
    [Parameter]
    public EventCallback<ParameterModelBase> OnDelete { get; set; }
    
    [Parameter]
    public SelectParameterModel SettingsForm { get; set; }

    public void OnSelect(ChangeEventArgs args)
    {
        string inputValue = args.Value.ToString();
        try
        {
            SettingsForm.Value = inputValue;
        }
        catch
        {
            SettingsForm.IsValid = false;
            return;
        }

        SettingsForm.IsValid = true;
    }

}